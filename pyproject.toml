[build-system]
requires = ['poetry-core>=1.0.0', 'wheel',]
build-backend = 'poetry.core.masonry.api'


[tool.coverage.run]
branch = true
relative_files = true
omit = [
    '.tox/*',
    'tests/*',
    'main.py',
    '__main__.py',
]


[tool.poetry]
name = 'growlery'
version = '0.3.0'
description = "An OSRS Discord bot for Clan Quest."

authors = ["Lari Liuhamo <lari.liuhamo+pypi@gmail.com>",]
maintainers = ["Lari Liuhamo <lari.liuhamo+pypi@gmail.com>",]

include = ['CHANGELOG.md', 'LICENSE',]
license = 'MIT'
readme = 'README.md'

homepage = 'https://pypi.org/project/clan-quest-osrs-discord-bot/'
repository = 'https://github.com/Diapolo10/clan-quest-osrs-discord-bot'
documentation = 'https://github.com/Diapolo10/clan-quest-osrs-discord-bot/tree/main/docs'

keywords = [
    'python3',
    'discord',
    'runescape',
    'osrs',
    'oldschool',
]
classifiers = [
    'Development Status :: 4 - Beta',
    'Environment :: Console',
    'Intended Audience :: End Users/Desktop',
    'Intended Audience :: Information Technology',
    'Intended Audience :: System Administrators',
    'License :: OSI Approved :: MIT License',
    'Natural Language :: English',
    'Operating System :: MacOS',
    'Operating System :: Microsoft :: Windows :: Windows 10',
    'Operating System :: Microsoft :: Windows :: Windows 11',
    'Operating System :: POSIX :: Linux',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: Implementation :: CPython',
    'Programming Language :: Python :: Implementation :: PyPy',
    'Topic :: Communications :: Chat',
    'Topic :: Games/Entertainment',
    'Topic :: Utilities',
    'Typing :: Typed',
]


[tool.poetry.dependencies]
python = '^3.10'
aiohttp = '^3.8.4'
"discord.py" = '^2.2.3'
python-dotenv = '^1.0.0'
reactionmenu = '^3.1.3'


[tool.poetry.group.dev.dependencies]
mypy = '^1.3.0'


[tool.poetry.group.linters]
optional = true


[tool.poetry.group.linters.dependencies]
ruff = '^0.0.265'


[tool.poetry.group.tests]
optional = true


[tool.poetry.group.tests.dependencies]
coverage = {version = '^7.2.2', extras = ['toml',]}
dpytest = '^0.6.3'
pytest = '^7.2.2'
pytest-asyncio = '^0.21.0'
pytest-cov = '^4.0.0'
tox = '^4.4.8'
tox-gh-actions = '^3.1.0'


[tool.poetry.urls]
"Tracker" = 'https://github.com/Diapolo10/clan-quest-osrs-discord-bot/issues'
"Changelog" = 'https://github.com/Diapolo10/clan-quest-osrs-discord-bot/blob/main/CHANGELOG.md'


[tool.pytest.ini_options]
minversion = "6.0"
addopts = """
--doctest-modules \
--cov=./ \
--cov-append \
--cov-report html:tests/reports/coverage-html \
--cov-report xml:tests/reports/coverage.xml \
--ignore=docs/
"""
testpaths = [
    'tests',
]
filterwarnings = [
    "ignore::DeprecationWarning:discord*:"
]


[tool.ruff]
select = [
    'A',   # Builtins
    'ANN', # Annotations
    'ARG', # Unused arguments
    'B',   # Bugbear
    'BLE', # Blind except
    'C4',  # Comprehensions
    'C90', # mccabe
    'COM', # Commas
    'DTZ', # Datetimes
    'ERA', # Commented-out code
    'EXE', # Executable
    'G',   # Logging format
    'I',   # Isort
    'ICN', # Import conventions
    'INP', # Disallow PEP-420 (Implicit namespace packages)
    'INT', # gettext
    'ISC', # Implicit str concat
    'N',   # PEP-8 Naming
    'NPY', # Numpy
    'PGH', # Pygrep hooks
    'PIE', # Unnecessary code
    'PL',  # Pylint
    'PT',  # Pytest
    'PTH', # Use Pathlib
    'PYI', # Stub files
    'RET', # Return
    'RUF', # Ruff
    'RSE', # Raise
    'S',   # Bandit
    'SIM', # Code simplification
    'SLF', # Private member access
    'T20', # Print
    'TCH', # Type checking
    'TID', # Tidy imports
    'UP',  # Pyupgrade
    'W',   # Warnings
    'YTT', # sys.version
]
ignore = [
    'ANN401',   # Disallow typing.Any
    'PLR0913',  # Too many arguments
]
ignore-init-module-imports = true
line-length = 120


[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10


[tool.ruff.per-file-ignores]
# https://beta.ruff.rs/docs/rules/
'__init__.py' = ['F401','F403','F405',]
'tests/*' = ['ANN', 'ARG', 'PT011', 'S101', 'PLR2004',]


[tool.ruff.pylint]
max-args = 15
max-branches = 20
max-returns = 10
max-statements = 80


[tool.ruff.flake8-tidy-imports]
ban-relative-imports = "all"


[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38, py39, py310, py311, pypy3
isolated_build = True

[gh-actions]
python =
    3.10: py310
    3.11: py311
    pypy-3.10: pypy3

[gh-actions:env]
PLATFORM =
    ubuntu-latest: linux
    macos-latest: macos
    windows-latest: windows

[testenv]
passenv = GITHUB_*
deps =
    coverage
    coveralls[toml]
    dpytest
    pytest
    pytest-cov
    pytest-asyncio
commands =
    coverage run -m pytest
"""
